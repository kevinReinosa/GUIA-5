
package guia5_progra_ii;

import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class Guia2_Preguntas extends javax.swing.JFrame {

    /**
     * Creates new form Promedio
     */
    public Guia2_Preguntas() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MenuPrincipal = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        R1 = new javax.swing.JButton();
        R2 = new javax.swing.JButton();
        R3 = new javax.swing.JButton();
        R4 = new javax.swing.JButton();
        R5 = new javax.swing.JButton();
        R6 = new javax.swing.JButton();
        R7 = new javax.swing.JButton();
        imagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(700, 500));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Guia 2 preguntas");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 30, 140, 19);

        MenuPrincipal.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        MenuPrincipal.setForeground(new java.awt.Color(0, 153, 255));
        MenuPrincipal.setText("Menu Principal");
        MenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPrincipalActionPerformed(evt);
            }
        });
        getContentPane().add(MenuPrincipal);
        MenuPrincipal.setBounds(400, 360, 180, 31);

        jLabel3.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 255));
        jLabel3.setText("¿Qué es una matriz y que tipo de datos puede manejar?");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 330, 450, 23);

        jLabel4.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 255));
        jLabel4.setText("¿Qué es un vector dentro de JAVA?");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 60, 260, 23);

        jLabel5.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 255));
        jLabel5.setText("¿Qué es un array dentro de JAVA?");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 110, 260, 23);

        jLabel6.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 255));
        jLabel6.setText("¿Cómo se diferencia un vector de un array?");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 150, 350, 20);

        jLabel7.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 255));
        jLabel7.setText("¿Qué utilidad concreta tiene cada una de estas estructuras de datos dentro de la programación?");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 230, 670, 20);

        jLabel8.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 255));
        jLabel8.setText("Liste los diferentes tipos de vectores y arrays que pueden utilizarse en JAVA :");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 180, 590, 23);

        jLabel9.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 204, 255));
        jLabel9.setText("¿Qué es el tipo de datos object dentro de JAVA?");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 280, 430, 23);

        R1.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        R1.setForeground(new java.awt.Color(0, 204, 255));
        R1.setText("Respuesta");
        R1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1ActionPerformed(evt);
            }
        });
        getContentPane().add(R1);
        R1.setBounds(280, 60, 120, 20);

        R2.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        R2.setForeground(new java.awt.Color(0, 204, 255));
        R2.setText("Respuesta");
        R2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2ActionPerformed(evt);
            }
        });
        getContentPane().add(R2);
        R2.setBounds(310, 111, 120, 20);

        R3.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        R3.setForeground(new java.awt.Color(0, 204, 255));
        R3.setText("Respuesta");
        R3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R3ActionPerformed(evt);
            }
        });
        getContentPane().add(R3);
        R3.setBounds(350, 151, 120, 20);

        R4.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        R4.setForeground(new java.awt.Color(0, 204, 255));
        R4.setText("Respuesta");
        R4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R4ActionPerformed(evt);
            }
        });
        getContentPane().add(R4);
        R4.setBounds(40, 210, 120, 20);

        R5.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        R5.setForeground(new java.awt.Color(0, 204, 255));
        R5.setText("Respuesta");
        R5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R5ActionPerformed(evt);
            }
        });
        getContentPane().add(R5);
        R5.setBounds(40, 260, 120, 20);

        R6.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        R6.setForeground(new java.awt.Color(0, 204, 255));
        R6.setText("Respuesta");
        R6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R6ActionPerformed(evt);
            }
        });
        getContentPane().add(R6);
        R6.setBounds(50, 310, 120, 20);

        R7.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        R7.setForeground(new java.awt.Color(0, 204, 255));
        R7.setText("Respuesta");
        R7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R7ActionPerformed(evt);
            }
        });
        getContentPane().add(R7);
        R7.setBounds(50, 361, 120, 20);

        imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/IMG-20180315-WA0061.jpg"))); // NOI18N
        imagen.setText("imagen");
        getContentPane().add(imagen);
        imagen.setBounds(-30, -20, 710, 490);

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    private void MenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPrincipalActionPerformed
        Menu_Principal G1=new Menu_Principal();
        this.setVisible(false);
        G1.setVisible(true);
        G1.setLocationRelativeTo(null);
    }//GEN-LAST:event_MenuPrincipalActionPerformed

    private void R1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1ActionPerformed
     JOptionPane.showMessageDialog(null," Respuesta: Un vector es una estructura estática, "
             + "\nque se maneja por índices, cada uno de estos índices es un espacio donde se"
             + "\n puede almacenar un valor."
             + "\nlos índices del vector empiezan en cero, y cada cuadro contendría adentro un"
             + "\n valor específico, en caso que se le hubiera dado uno, de lo contrario aparecerá"
             + "\n por defecto como null.\n" +
             "\nLa forma de crear un vector en java es sumamente sencilla, es suficiente con agregar los paréntesis"
             + "\n cuadrados, \"[ ]\", al final del tipo de nuestra variable, como ejemplo vamos a crear"
             + "\n un vector de Strings,uno de enteros y otro de Object","MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_R1ActionPerformed

    private void R2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2ActionPerformed
     JOptionPane.showMessageDialog(null,"Respuesta : Un array es un medio de guardar un conjunto de "
             + "\nobjetos del mismo tipo. Se accede a cada elemento individual del array mediante un número"
             + "\n entero denominado índice. 0 es el índice del primer elemento y n-1 es el índice del último "
             + "\nelemento, siendo n, la dimensión del array. Para crear un array se hace así: int[] numeros; "
             + "\nCon esa línea se crea la variable tipo Array. Eso si, ahora hay que darle un índice, "
             + "\npara saber de cuántos elementos se compone el Array. numeros = new int[5]; Así \"rellenamos\""
             + "\n al Array de 5 elementos. Es decir, es como si tuvieramos 5 variables \"int\" todas juntas"
             + "\n Veamos un ejemplo donde tenemos un Array de 5 elementos y le damos un valor a cada elemento,"
             + "\n y los mostramos por pantalla."
             + "\n[1] [2] [3] [4] [5]","MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_R2ActionPerformed

    private void R3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R3ActionPerformed
     JOptionPane.showMessageDialog(null,"Respuesta : Un vector es similar a un array, la diferencia estriba en que "
             + "\nun vector crece automáticamente cuando alcanza la dimensión inicial máxima. Además, proporciona métodos"
             + "\n adicionales para añadir, eliminar elementos, e insertar elementos entre otros dos existentes.\n" +
              "\nLos arrays unidimensionales se conocen con el nombre de vectores. Los arrays bidimensionales se conocen con el "
             + "\nnombre de matrices.","MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_R3ActionPerformed

    private void R4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R4ActionPerformed
      JOptionPane.showMessageDialog(null, "Respuesta: Se pueden crear arrays:\n" +
" De enteros de tipo int\n" +
" De reales de tipo float\n" +
"Vector:\n" +
" Sentencia import.\n" +
" String\n" +
" Object","MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_R4ActionPerformed

    private void R5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R5ActionPerformed
        JOptionPane.showMessageDialog(null,"Respuesta: Un array es una estructura de datos"
                                        + "\nque contiene una colección de datos del mismo tipo."
                + "\nPropiedades de los arrays.\n" +
               "Los arrays se utilizan como contenedores para almacenar datos relacionados (En vez de "
                + "\ndeclarar variables por separarado para cada uno de los elementos del array)."
                + "\nTodos los datos incluidos en el array son del mismo tipo. Se pueden crear arrays de "
                + "\nenteros de tipo int o de reales de tipo float, pero en un mismo array no se pueden mezclar"
                + "\n datos tipo int y datos de tipo float."
                + "\nCuando creamos un vector u objeto de la clase Vector, podemos especificar su dimensión inicial,"
                + "\n y cuanto crecerá si rebasamos dicha dimensión.","MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_R5ActionPerformed

    private void R6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R6ActionPerformed
        JOptionPane.showMessageDialog(null,"Respuesta: La clase Object, como ya se ha indicado anteriormente, es la clase "
                + "\nraíz de todo el árbol de la jerarquía de clases Java, y proporciona un cierto número de métodos de utilidad"
                + "\n general que pueden utilizar todos los objetos. La lista completa se puede ver en la documentación del API "
                + "\nde Java, aquí solamente se tratarán algunos de ellos; por ejemplo, Object proporciona:  Un método por el "
                + "\nque un objeto se puede comparar con otro objeto  Un método para convertir un objeto a una cadena  Un método"
                + "\n para esperar a que ocurra una determinada condición  Un método para notificar a otros objetos que una "
                + "\ncondición ha cambiado  Un método para devolver la clase de un objeto","MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_R6ActionPerformed

    private void R7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R7ActionPerformed
    JOptionPane.showMessageDialog(null,"Respuesta: Una matriz es una estructura de datos, o más técnicamente, un espacio "
            + "\nde memoria que permite almacenar una colección de elementos, todos del mismo tipo. La diferencia con los"
            + "\n arreglos está en que, en las matrices, los elementos no están organizados linealmente sino que su "
            + "\norganización es bidimensional, es decir, en filas y columnas. Conviene imaginar una matriz como una "
            + "\norganización de celdas de memoria, o casillas, en cada una de las cuales se puede guardar un elemento "
            + "\nde la colección.","MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_R7ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Guia2_Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Guia2_Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Guia2_Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Guia2_Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Guia2_Preguntas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MenuPrincipal;
    private javax.swing.JButton R1;
    private javax.swing.JButton R2;
    private javax.swing.JButton R3;
    private javax.swing.JButton R4;
    private javax.swing.JButton R5;
    private javax.swing.JButton R6;
    private javax.swing.JButton R7;
    private javax.swing.JLabel imagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
