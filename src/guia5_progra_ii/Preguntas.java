/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guia5_progra_ii;

import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class Preguntas extends javax.swing.JFrame {

    /**
     * Creates new form Preguntas
     */
    public Preguntas() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        Metodo = new javax.swing.JButton();
        Clase = new javax.swing.JButton();
        UsarPOO = new javax.swing.JButton();
        Encapsulamiento = new javax.swing.JButton();
        Herencia = new javax.swing.JButton();
        Abstraccion = new javax.swing.JButton();
        Polimorfismo = new javax.swing.JButton();
        RPOO = new javax.swing.JButton();
        ConceptosPOO = new javax.swing.JButton();
        Libreria = new javax.swing.JButton();
        Constructor = new javax.swing.JButton();
        BaseDatos = new javax.swing.JButton();
        Math = new javax.swing.JButton();
        Char = new javax.swing.JButton();
        Objeto = new javax.swing.JButton();
        String = new javax.swing.JButton();
        Double = new javax.swing.JButton();
        Int = new javax.swing.JButton();
        Dato = new javax.swing.JButton();
        Valor = new javax.swing.JButton();
        MenuPrincipal = new javax.swing.JButton();
        imagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 750));
        setMinimumSize(new java.awt.Dimension(900, 750));
        setPreferredSize(new java.awt.Dimension(900, 750));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 102));
        jLabel1.setText("¿Qué es la programación orientada a objetos(POO)?   ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 40, 315, 20);

        jLabel2.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 102));
        jLabel2.setText("¿Cuáles son los conceptos y nociones básicas de la POO?   ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 70, 350, 20);

        jLabel6.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 255, 102));
        jLabel6.setText("¿Qué es una base de datos?");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(500, 310, 190, 20);

        jLabel8.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 255, 102));
        jLabel8.setText("Caracteristicas de una variable tipo char");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(510, 240, 240, 20);

        jLabel9.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 255, 102));
        jLabel9.setText("Que es un valor ?");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(510, 70, 130, 20);

        jLabel10.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 255, 102));
        jLabel10.setText("Caracteristicas de una variable tipo String");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(500, 180, 250, 20);

        jLabel11.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 255, 102));
        jLabel11.setText("Caracteristicas de una variable tipo double");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(510, 140, 250, 20);

        jLabel13.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 255, 102));
        jLabel13.setText("¿Que es la clase math en JAVA?   ");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(500, 270, 210, 20);

        jLabel14.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 255, 102));
        jLabel14.setText("Caracteristicas de una variable tipo int");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(510, 100, 230, 20);

        jLabel15.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 255, 102));
        jLabel15.setText("Que es polimorfismo ?");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(40, 120, 126, 20);

        jLabel16.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 255, 102));
        jLabel16.setText("Caracteristicas de un objeto ");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(500, 210, 190, 20);

        jLabel17.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 255, 102));
        jLabel17.setText("Que es Herencia ?");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(50, 180, 104, 20);

        jLabel18.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 255, 102));
        jLabel18.setText("Que es Abstraccion ?");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(40, 150, 119, 20);

        jLabel19.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 255, 102));
        jLabel19.setText("Que es encapsulamiento ?");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(40, 210, 147, 20);

        jLabel20.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 255, 102));
        jLabel20.setText("¿Por qué es preferible usar POO a programación estructurada?   ");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(40, 240, 390, 20);

        jLabel21.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 102, 204));
        jLabel21.setText("   ");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(140, 380, 18, 20);

        jLabel22.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 255, 102));
        jLabel22.setText("Que es una clase ? ");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(60, 290, 114, 20);

        jLabel23.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 255, 102));
        jLabel23.setText("Que es un constructor ?");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(60, 350, 140, 20);

        jLabel24.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 255, 102));
        jLabel24.setText("Que es un metodo ?");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(60, 320, 118, 20);

        jLabel25.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 255, 102));
        jLabel25.setText("Que es un dato ?");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(500, 30, 130, 20);

        jLabel26.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 255, 102));
        jLabel26.setText("Que es una libreria ?");
        getContentPane().add(jLabel26);
        jLabel26.setBounds(60, 380, 120, 20);

        Metodo.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Metodo.setForeground(new java.awt.Color(0, 102, 204));
        Metodo.setText("Respuesta");
        Metodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetodoActionPerformed(evt);
            }
        });
        getContentPane().add(Metodo);
        Metodo.setBounds(220, 320, 100, 20);

        Clase.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Clase.setForeground(new java.awt.Color(0, 102, 204));
        Clase.setText("Respuesta");
        Clase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClaseActionPerformed(evt);
            }
        });
        getContentPane().add(Clase);
        Clase.setBounds(200, 290, 100, 20);

        UsarPOO.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        UsarPOO.setForeground(new java.awt.Color(0, 102, 204));
        UsarPOO.setText("Respuesta");
        UsarPOO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsarPOOActionPerformed(evt);
            }
        });
        getContentPane().add(UsarPOO);
        UsarPOO.setBounds(60, 270, 100, 20);

        Encapsulamiento.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Encapsulamiento.setForeground(new java.awt.Color(0, 102, 204));
        Encapsulamiento.setText("Respuesta");
        Encapsulamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncapsulamientoActionPerformed(evt);
            }
        });
        getContentPane().add(Encapsulamiento);
        Encapsulamiento.setBounds(210, 210, 110, 20);

        Herencia.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Herencia.setForeground(new java.awt.Color(0, 102, 204));
        Herencia.setText("Respuesta");
        Herencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HerenciaActionPerformed(evt);
            }
        });
        getContentPane().add(Herencia);
        Herencia.setBounds(190, 180, 110, 20);

        Abstraccion.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Abstraccion.setForeground(new java.awt.Color(0, 102, 204));
        Abstraccion.setText("Respuesta");
        Abstraccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbstraccionActionPerformed(evt);
            }
        });
        getContentPane().add(Abstraccion);
        Abstraccion.setBounds(200, 150, 110, 18);

        Polimorfismo.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Polimorfismo.setForeground(new java.awt.Color(0, 102, 204));
        Polimorfismo.setText("Respuesta");
        Polimorfismo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PolimorfismoActionPerformed(evt);
            }
        });
        getContentPane().add(Polimorfismo);
        Polimorfismo.setBounds(210, 120, 110, 18);

        RPOO.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        RPOO.setForeground(new java.awt.Color(0, 102, 204));
        RPOO.setText("Respuesta");
        RPOO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RPOOActionPerformed(evt);
            }
        });
        getContentPane().add(RPOO);
        RPOO.setBounds(340, 40, 100, 18);

        ConceptosPOO.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        ConceptosPOO.setForeground(new java.awt.Color(0, 102, 204));
        ConceptosPOO.setText("Respuesta");
        ConceptosPOO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConceptosPOOActionPerformed(evt);
            }
        });
        getContentPane().add(ConceptosPOO);
        ConceptosPOO.setBounds(40, 100, 100, 16);

        Libreria.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Libreria.setForeground(new java.awt.Color(0, 102, 204));
        Libreria.setText("Respuesta");
        Libreria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LibreriaActionPerformed(evt);
            }
        });
        getContentPane().add(Libreria);
        Libreria.setBounds(220, 380, 100, 20);

        Constructor.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Constructor.setForeground(new java.awt.Color(0, 102, 204));
        Constructor.setText("Respuesta");
        Constructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConstructorActionPerformed(evt);
            }
        });
        getContentPane().add(Constructor);
        Constructor.setBounds(220, 350, 100, 20);

        BaseDatos.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        BaseDatos.setForeground(new java.awt.Color(0, 102, 204));
        BaseDatos.setText("Respuesta");
        BaseDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaseDatosActionPerformed(evt);
            }
        });
        getContentPane().add(BaseDatos);
        BaseDatos.setBounds(770, 300, 110, 20);

        Math.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Math.setForeground(new java.awt.Color(0, 102, 204));
        Math.setText("Respuesta");
        Math.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MathActionPerformed(evt);
            }
        });
        getContentPane().add(Math);
        Math.setBounds(770, 270, 110, 20);

        Char.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Char.setForeground(new java.awt.Color(0, 102, 204));
        Char.setText("Respuesta");
        Char.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CharActionPerformed(evt);
            }
        });
        getContentPane().add(Char);
        Char.setBounds(770, 240, 110, 20);

        Objeto.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Objeto.setForeground(new java.awt.Color(0, 102, 204));
        Objeto.setText("Respuesta");
        Objeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObjetoActionPerformed(evt);
            }
        });
        getContentPane().add(Objeto);
        Objeto.setBounds(770, 210, 110, 20);

        String.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        String.setForeground(new java.awt.Color(0, 102, 204));
        String.setText("Respuesta");
        String.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StringActionPerformed(evt);
            }
        });
        getContentPane().add(String);
        String.setBounds(770, 180, 110, 20);

        Double.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Double.setForeground(new java.awt.Color(0, 102, 204));
        Double.setText("Respuesta");
        Double.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoubleActionPerformed(evt);
            }
        });
        getContentPane().add(Double);
        Double.setBounds(770, 140, 110, 20);

        Int.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Int.setForeground(new java.awt.Color(0, 102, 204));
        Int.setText("Respuesta");
        Int.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IntActionPerformed(evt);
            }
        });
        getContentPane().add(Int);
        Int.setBounds(770, 100, 110, 20);

        Dato.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Dato.setForeground(new java.awt.Color(0, 102, 204));
        Dato.setText("Respuesta");
        Dato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatoActionPerformed(evt);
            }
        });
        getContentPane().add(Dato);
        Dato.setBounds(770, 30, 110, 20);

        Valor.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        Valor.setForeground(new java.awt.Color(0, 102, 204));
        Valor.setText("Respuesta");
        Valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValorActionPerformed(evt);
            }
        });
        getContentPane().add(Valor);
        Valor.setBounds(770, 70, 110, 20);

        MenuPrincipal.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        MenuPrincipal.setForeground(new java.awt.Color(0, 153, 255));
        MenuPrincipal.setText("Menu Principal");
        MenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPrincipalActionPerformed(evt);
            }
        });
        getContentPane().add(MenuPrincipal);
        MenuPrincipal.setBounds(530, 360, 180, 31);

        imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/IMG-20180315-WA0061.jpg"))); // NOI18N
        imagen.setText("Imagen");
        getContentPane().add(imagen);
        imagen.setBounds(-240, 0, 1280, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HerenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HerenciaActionPerformed
    
      JOptionPane.showMessageDialog(null,"La herencia en java representa lo que conocemos de herencia en el mundo real,\n"
              + " básicamente mediante esta obtenemos las características o rasgos comunes de nuestros \n"
              + "padres o abuelos, en java es el mismo enfoque permitiendo la creación de nuevas clases \n"
              + "basadas en clases ya existentes, con las cuales podemos obtener las características de las\n"
              + " clases padres, heredando campos, atributos, métodos o funcionalidades.  \n" +
"En Java solo se puede heredar de una sola clase padre y se representa mediante la palabra extends");
    }//GEN-LAST:event_HerenciaActionPerformed

    private void RPOOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RPOOActionPerformed
  JOptionPane.showMessageDialog(null," La programación orientada a Objetos básicamente define una serie de conceptos y \n"
          + "técnicas de programación para representar acciones o cosas de la vida real basada en objetos,\n"
          + " a diferencia de otras formas de programación como por ejemplo la estructurada, con la POO trabajamos\n"
          + " de manera distinta vinculando diferentes conceptos tales como clases, objetos, métodos, propiedades, \n"
          + "estados, herencia, encapsulación entre otros, generando cada vez interrelaciones en nuestro desarrollo \n"
          + "en pro del funcionamiento del sistema principal, definiendo el programa como un conjunto de estos objetos\n"
          + " relacionados entre si.");     
    }//GEN-LAST:event_RPOOActionPerformed

    private void ConceptosPOOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConceptosPOOActionPerformed
    JOptionPane.showMessageDialog(null,"Veamos algunos de los conceptos principales \n" +
"1. Clases.\n Una clase se compone por tres partes fundamentales: \nNombre,Atributos, Métodos \n"
            + "2. Objeto. Al igual que las clases se componen de tres partes fundamentales:  \n" +
"Estado, Comportamiento, Identidad  \n" +
"3. Herencia. \n4. Encapsulamiento Se representa por 3 niveles :\n Público,Protegido, Privado \n"
            + "5. Clases Abstractas. \n6. Interfaces. \n 7. Polimorfismo.  ");
    }//GEN-LAST:event_ConceptosPOOActionPerformed

    private void LibreriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LibreriaActionPerformed
       JOptionPane.showMessageDialog(null,"Una librería en Java se puede entender como un conjunto de clases, que\n "
               + "poseen una serie de métodos y atributos. Lo realmente interesante de estas librerías\n"
               + " para Java es que facilitan muchas operaciones. De una forma más completa, \n"
               + "las librerías en Java nos permiten reutilizar código, es decir que podemos \n"
               + "hacer uso de los métodos, clases y atributos que componen la librería evitando\n"
               + " así tener que implementar nosotros mismos esas funcionalidades. ");
    }//GEN-LAST:event_LibreriaActionPerformed

    private void PolimorfismoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PolimorfismoActionPerformed
        JOptionPane.showMessageDialog(null,"Básicamente podemos definirlo como la capacidad que tienen los objetos de comportarse de múltiples formas sin \n"
                + "olvidar que para esto se requiere de la herencia, en si consiste en hacer referencia a objetos de una clase que puedan \n"
                + "tomar comportamientos de objetos descendientes de esta. ");
    }//GEN-LAST:event_PolimorfismoActionPerformed

    private void AbstraccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbstraccionActionPerformed
       
          JOptionPane.showMessageDialog(null,"Abstraer significa simplificar. ");
    }//GEN-LAST:event_AbstraccionActionPerformed

    private void EncapsulamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncapsulamientoActionPerformed
         JOptionPane.showMessageDialog(null," Este concepto es uno de los más importantes en términos de seguridad \n"
                 + "dentro de nuestra aplicación, la encapsulación es la forma de proteger nuestros \n"
                 + "datos dentro del sistema, estableciendo básicamente los permisos o niveles de\n"
                 + " visibilidad o acceso de nuestros datos ");
    }//GEN-LAST:event_EncapsulamientoActionPerformed

    private void UsarPOOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsarPOOActionPerformed
       JOptionPane.showMessageDialog(null,"ava ha sido probado, ajustado, ampliado y probado por toda una comunidad de\n"
               + " desarrolladores, arquitectos de aplicaciones y entusiastas de Java. Java está diseñado\n"
               + " para permitir el desarrollo de aplicaciones portátiles de elevado rendimiento para el más\n"
               + " amplio rango de plataformas informáticas posible. Al poner a disposición de todo el mundo\n"
               + " aplicaciones en entornos heterogéneos, las empresas pueden proporcionar más servicios y mejorar\n"
               + " la productividad, las comunicaciones y colaboración del usuario final y reducir drásticamente el\n"
               + " costo de propiedad tanto para aplicaciones de usuario como de empresa.");
    }//GEN-LAST:event_UsarPOOActionPerformed

    private void ClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClaseActionPerformed
        
        JOptionPane.showMessageDialog(null,"Las clases son uno de los principales componentes de un lenguaje de programación,\n"
                + " pues en ellas ocurren todos los procesos lógicos requeridos para un sistema, en si podemos\n"
                + " definirlas como estructuras que representan objetos del mundo real, tomando como objetos a \n"
                + "personas, lugares o cosas, en general las clases poseen propiedades, comportamientos y relaciones\n"
                + " con otras clases del sistema. ");
    }//GEN-LAST:event_ClaseActionPerformed

    private void MetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetodoActionPerformed
     
        JOptionPane.showMessageDialog(null,"Los métodos son como una Función. Lo que pasa que los métodos están dentro de una clase, es\n"
             + " decir, que son funciones que solo utilizan los objetos de esta Clase, en este caso, los coches que\n"
             + " creemos. Se pueden hacer tantos métodos como se quieran para la Clase.");
    }//GEN-LAST:event_MetodoActionPerformed

    private void ConstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConstructorActionPerformed
      
        JOptionPane.showMessageDialog(null," El constructor siempre tiene el mismo nombre que la Clase y se utiliza para construir objetos\n"
              + " de esa Clase. Los constructores no tienen ningún valor de retorno, ni siquiera \"void\". ");
    }//GEN-LAST:event_ConstructorActionPerformed

    private void DatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatoActionPerformed
        
        JOptionPane.showMessageDialog(null,"Un dato es un variable o un objeto, de esto desglozamos que: \n"
                 + "Dado que antes hemos dicho que un objeto también ocupa un espacio de \n"
                 + "memoria: ¿en qué se parecen y en qué se diferencia un objeto de una \n"
                 + "variable? Consideraremos que las variables son entidades elementales: \n"
                 + "un número, un carácter, un valor verdadero o falso… mientras que los \n"
                 + "objetos son entidades complejas que pueden estar formadas por la agrupación\n"
                 + " de muchas variables y métodos. Pero ambas cosas ocupan lo mismo: un espacio \n"
                 + "de memoria (que puede ser más o menos grande). ");
    }//GEN-LAST:event_DatoActionPerformed

    private void ValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValorActionPerformed
         JOptionPane.showMessageDialog(null,"Las variables son el elemento esencial de la programación. En ellas\n"
                  + " será donde almacenemos todos los datos o valores con los que vamos a trabajar. ");
    }//GEN-LAST:event_ValorActionPerformed

    private void IntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IntActionPerformed
       JOptionPane.showMessageDialog(null," Tipo de dato entero. Su valor mínimo es -2,147,483,648 y el máximo 2,147,483,647 (incluído).  \n" +
"Ejemplo: 12, 456, -315... ");
    }//GEN-LAST:event_IntActionPerformed

    private void DoubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoubleActionPerformed
      JOptionPane.showMessageDialog(null," Tipo de dato entero. Su valor mínimo es -2,147,483,648 y el máximo 2,147,483,647 (incluído).  \n" +
"Ejemplo: 12, 456, -315... ");
    }//GEN-LAST:event_DoubleActionPerformed

    private void StringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StringActionPerformed
       JOptionPane.showMessageDialog(null,"Dentro de un objeto de la clases String o StringBuffer, Java crea un array de caracteres de una \n"
                 + "forma similar a como lo hace el lenguaje C++. A este array se accede a través de las funciones miembro de la clase. \n" +
"Los strings u objetos de la clase String se pueden crear explícitamente o implícitamente. Para crear un string implícitamente basta poner \n"
                 + "una cadena de caracteres entre comillas dobles.");
    }//GEN-LAST:event_StringActionPerformed

    private void ObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObjetoActionPerformed
       JOptionPane.showMessageDialog(null,"La clase Object, como ya se ha indicado anteriormente, es la clase raíz de todo el árbol de la jerarquía de clases Java,\n"
                + " y proporciona un cierto número de métodos de utilidad general que pueden utilizar todos los objetos. ");
    }//GEN-LAST:event_ObjetoActionPerformed

    private void CharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CharActionPerformed
       JOptionPane.showMessageDialog(null,"El tipo de dato char es un solo carácter Unicode. Por ejemplo: 'c', 'a', '7', etc. ");
    }//GEN-LAST:event_CharActionPerformed

    private void MathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MathActionPerformed
       JOptionPane.showMessageDialog(null,"La clase Math tiene miembros dato y funciones miembro estáticas");
    }//GEN-LAST:event_MathActionPerformed

    private void BaseDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaseDatosActionPerformed
        JOptionPane.showMessageDialog(null,"Java Database Connectivity, más conocida por sus siglas JDBC, es una API que permite\n"
                 + " la ejecución de operaciones sobre bases de datos desde el lenguaje de programación Java, \n"
                 + "independientemente del sistema operativo donde se ejecute o de la base de datos a la cual se \n"
                 + "accede, utilizando el dialecto SQL del modelo de base de datos que se utilice. ");
    }//GEN-LAST:event_BaseDatosActionPerformed

    private void MenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPrincipalActionPerformed
        Menu_Principal G1=new Menu_Principal();
        this.setVisible(false);
        G1.setVisible(true);
        G1.setLocationRelativeTo(null);
    }//GEN-LAST:event_MenuPrincipalActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Preguntas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Preguntas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abstraccion;
    private javax.swing.JButton BaseDatos;
    private javax.swing.JButton Char;
    private javax.swing.JButton Clase;
    private javax.swing.JButton ConceptosPOO;
    private javax.swing.JButton Constructor;
    private javax.swing.JButton Dato;
    private javax.swing.JButton Double;
    private javax.swing.JButton Encapsulamiento;
    private javax.swing.JButton Herencia;
    private javax.swing.JButton Int;
    private javax.swing.JButton Libreria;
    private javax.swing.JButton Math;
    private javax.swing.JButton MenuPrincipal;
    private javax.swing.JButton Metodo;
    private javax.swing.JButton Objeto;
    private javax.swing.JButton Polimorfismo;
    private javax.swing.JButton RPOO;
    private javax.swing.JButton String;
    private javax.swing.JButton UsarPOO;
    private javax.swing.JButton Valor;
    private javax.swing.JLabel imagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
